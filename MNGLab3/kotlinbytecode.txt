// ================BubbleSortKotlinKt.class =================
// class version 52.0 (52)
// access flags 0x31
public final class BubbleSortKotlinKt {


  // access flags 0x19
  public final static bubbleSort([I)[I //Deklaracja metody bubbleSort przyjmującej jako argument tablicę liczb całkowitych i zwracającej tablicę liczb całkowitych.
  @Lorg/jetbrains/annotations/NotNull;() // invisible
    // annotable parameter count: 1 (visible)
    // annotable parameter count: 1 (invisible)
    @Lorg/jetbrains/annotations/NotNull;() // invisible, parameter 0
   L0
    ALOAD 0 //Ładowanie na stos referencji do pierwszego argumentu metody.
    LDC "arr" //Ładowanie na stos stałej napisowej "arr".
    INVOKESTATIC kotlin/jvm/internal/Intrinsics.checkNotNullParameter (Ljava/lang/Object;Ljava/lang/String;)V //Wywołanie statycznej metody checkNotNullParameter z klasy kotlin.jvm.internal.Intrinsics, która sprawdza, czy argument nie jest pustą wartością null.
   L1
    LINENUMBER 2 L1
    ICONST_1 //Umieszczenie na stosie wartości stałej 1 (typ całkowity).
    ISTORE 1 //Zapisanie wartości ze stosu do zmiennej lokalnej o indeksie 1.
   L2
    LINENUMBER 3 L2
   L3
    ILOAD 1 //Ładowanie wartości zmiennej lokalnej o indeksie 1 (flaga swap) na stos.
    IFEQ L4 //Skok do etykiety L4, jeśli wartość na stosie (flaga swap) jest równa 0.
   L5
    LINENUMBER 4 L5
    ICONST_0 //Umieszczenie na stosie wartości stałej 0 (typ całkowity).
    ISTORE 1 //Zapisanie wartości ze stosu do zmiennej lokalnej o indeksie 1.
   L6
    LINENUMBER 5 L6
    ICONST_0 //Umieszczenie na stosie wartości stałej 0 (typ całkowity).
    ISTORE 2 //Zapisanie wartości ze stosu do zmiennej lokalnej o indeksie 2.
    ALOAD 0 //Ładowanie na stos referencji do pierwszego argumentu metody.
    ARRAYLENGTH //Wywołanie metody length na obiekcie na stosie, zwracającej długość tablicy.
    ICONST_1 //Umieszczenie na stosie wartości stałej 1 (typ całkowity).
    ISUB //Zabranie dwóch wartości ze stosu, odjęcie ich i umieszczenie wyniku na stosie.
    ISTORE 3 //Zapisanie wartości ze stosu do zmiennej lokalnej o indeksie 3.
   L7
    LINENUMBER 5 L7
    ILOAD 2 // Ładowanie wartości zmiennej lokalnej o indeksie 2 (licznik pętli) na stos.
    ILOAD 3 //Ładowanie wartości zmiennej lokalnej o indeksie 3 (indeks graniczny pętli) na stos.
    IF_ICMPGE L8 //Jeśli wartości ze stosu (licznik pętli i indeks graniczny) są równe lub większe, wykonaj skok do etykiety L8.
   L9
    LINENUMBER 6 L9
    ALOAD 0 //Ładowanie na stos referencji do pierwszego argumentu metody.
    ILOAD 2 //Ładowanie wartości zmiennej lokalnej o indeksie 2 (licznik pętli) na stos.
    IALOAD //Ładowanie wartości z tablicy o indeksie wskazanym na stosie i umieszczenie jej na stosie.
    ALOAD 0 //Ładowanie na stos referencji do pierwszego argumentu metody.
    ILOAD 2 //Ładowanie wartości zmiennej lokalnej o indeksie 2 (licznik pętli) na stos.
    ICONST_1 //Umieszczenie na stosie wartości stałej 1 (typ całkowity).
    IADD //Zabranie dwóch wartości ze stosu, dodanie ich i umieszczenie wyniku na stosie.
    IALOAD //Ładowanie wartości z tablicy o indeksie wskazanym na stosie i umieszczenie jej na stosie.
    IF_ICMPLE L10 //Jeśli wartości ze stosu (dwie wartości z tablicy) spełniają warunek "mniejszy lub równy", wykonaj skok do etykiety L10.
   L11
    LINENUMBER 7 L11
    ALOAD 0 //Ładowanie na stos referencji do pierwszego argumentu metody.
    ILOAD 2 //Ładowanie wartości zmiennej lokalnej o indeksie 2 (licznik pętli) na stos.
    IALOAD
    ISTORE 4 //Zapisanie wartości ze stosu do zmiennej lokalnej o indeksie 4.
   L12
    LINENUMBER 8 L12
    ALOAD 0 //Ładowanie na stos referencji do pierwszego argumentu metody.
    ILOAD 2 //Ładowanie wartości zmiennej lokalnej o indeksie 2 (licznik pętli) na stos.
    ALOAD 0 //Ładowanie na stos referencji do pierwszego argumentu metody.
    ILOAD 2 //Ładowanie wartości zmiennej lokalnej o indeksie 2 (licznik pętli) na stos.
    ICONST_1 //Umieszczenie na stosie wartości stałej 1 (typ całkowity).
    IADD //Zabranie dwóch wartości ze stosu, dodanie ich i umieszczenie wyniku na stosie.
    IALOAD //Ładowanie wartości z tablicy o indeksie wskazanym na stosie i umieszczenie jej na stosie.
    IASTORE //Zabranie trzech wartości ze stosu i umieszczenie wartości ze środka (wartość lokalna) w tablicy o indeksie wskazanym na stosie.
   L13
    LINENUMBER 9 L13
    ALOAD 0 // Ładowanie na stos referencji do pierwszego argumentu metody.
    ILOAD 2 // Ładowanie wartości zmiennej lokalnej o indeksie 2 (licznik pętli) na stos.
    ICONST_1 //Umieszczenie na stosie wartości stałej 1 (typ całkowity).
    IADD //Zabranie dwóch wartości ze stosu, dodanie ich i umieszczenie wyniku na stosie.
    ILOAD 4 // Ładowanie wartości ze zmiennej lokalnej o indeksie 4 na stos.
    IASTORE //Zabranie trzech wartości ze stosu i umieszczenie wartości ze środka (wartość lokalna) w tablicy o indeksie wskazanym na stosie.
   L14
    LINENUMBER 11 L14
    ICONST_1 //Umieszczenie na stosie wartości stałej 1 (typ całkowity).
    ISTORE 1 //Zapisanie wartości ze stosu do zmiennej lokalnej o indeksie 1.
   L10
    LINENUMBER 5 L10 //Ustawienie numeru bieżącej linii kodu na 5 i przypisanie mu etykiety L10.
    IINC 2 1 //Zwiększenie wartości zmiennej lokalnej o indeksie 2 (licznik pętli) o 1.
   L15
    GOTO L7 //Wykonaj skok do etykiety L7.
   L8
    LINENUMBER 3 L8 //Ustawienie numeru bieżącej linii kodu na 3 i przypisanie mu etykiety L8.
    GOTO L3 //Wykonaj skok do etykiety L3.
   L4
    LINENUMBER 15 L4 //Ustawienie numeru bieżącej linii kodu na 15 i przypisanie mu etykiety L4.
    ALOAD 0 //Ładowanie na stos referencji do pierwszego argumentu metody.
    ARETURN //Zwrócenie wartości ze stosu zakończenie metody.
   L16
    LOCALVARIABLE temp I L12 L10 4 //Deklaracja zmiennej lokalnej o nazwie "temp" o typie całkowitym (int), rozpoczynającej się od linii L12 i kończącej na linii L10, o indeksie 4.
    LOCALVARIABLE i I L9 L15 2 //Deklaracja zmiennej lokalnej o nazwie "i" o typie całkowitym (int), rozpoczynającej się od linii L9 i kończącej na linii L15, o indeksie 2.
    LOCALVARIABLE swap Z L2 L16 1 
    LOCALVARIABLE arr [I L0 L16 0
    MAXSTACK = 5 //Maksymalny rozmiar stosu dla tej metody wynosi 5.
    MAXLOCALS = 5 //Maksymalna liczba zmiennych lokalnych dla tej metody wynosi 5.

  // access flags 0x19
  public final static main([Ljava/lang/String;)V
    // annotable parameter count: 1 (visible)
    // annotable parameter count: 1 (invisible)
    @Lorg/jetbrains/annotations/NotNull;() // invisible, parameter 0
   L0
    ALOAD 0
    LDC "args"
    INVOKESTATIC kotlin/jvm/internal/Intrinsics.checkNotNullParameter (Ljava/lang/Object;Ljava/lang/String;)V
   L1
    LINENUMBER 19 L1
    ICONST_5
    NEWARRAY T_INT
    DUP
    ICONST_0
    ICONST_2
    IASTORE
    DUP
    ICONST_1
    BIPUSH 15
    IASTORE
    DUP
    ICONST_2
    ICONST_1
    IASTORE
    DUP
    ICONST_3
    BIPUSH 8
    IASTORE
    DUP
    ICONST_4
    ICONST_4
    IASTORE
    INVOKESTATIC BubbleSortKotlinKt.bubbleSort ([I)[I
    ASTORE 1
   L2
    LINENUMBER 20 L2
    ALOAD 1
    ASTORE 4
    ALOAD 4
    ARRAYLENGTH
    ISTORE 5
    ICONST_0
    ISTORE 3
   L3
    LINENUMBER 20 L3
    ILOAD 3
    ILOAD 5
    IF_ICMPGE L4
    ALOAD 4
    ILOAD 3
    IALOAD
    ISTORE 2
   L5
    NEW java/lang/StringBuilder
    DUP
    INVOKESPECIAL java/lang/StringBuilder.<init> ()V
    ILOAD 2
    INVOKEVIRTUAL java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;
    BIPUSH 32
    INVOKEVIRTUAL java/lang/StringBuilder.append (C)Ljava/lang/StringBuilder;
    INVOKEVIRTUAL java/lang/StringBuilder.toString ()Ljava/lang/String;
    ASTORE 6
   L6
    GETSTATIC java/lang/System.out : Ljava/io/PrintStream;
    ALOAD 6
    INVOKEVIRTUAL java/io/PrintStream.print (Ljava/lang/Object;)V
   L7
   L8
    LINENUMBER 20 L8
    IINC 3 1
   L9
    GOTO L3
   L4
    LINENUMBER 21 L4
    RETURN
   L10
    LOCALVARIABLE k I L5 L9 2
    LOCALVARIABLE list [I L2 L10 1
    LOCALVARIABLE args [Ljava/lang/String; L0 L10 0
    MAXSTACK = 4
    MAXLOCALS = 7

  @Lkotlin/Metadata;(mv={1, 8, 0}, k=2, d1={"\u0000\u001c\n\u0000\n\u0002\u0010\u0015\n\u0002\u0008\u0002\n\u0002\u0010\u0002\n\u0000\n\u0002\u0010\u0011\n\u0002\u0010\u000e\n\u0002\u0008\u0002\u001a\u000e\u0010\u0000\u001a\u00020\u00012\u0006\u0010\u0002\u001a\u00020\u0001\u001a\u0019\u0010\u0003\u001a\u00020\u00042\u000c\u0010\u0005\u001a\u0008\u0012\u0004\u0012\u00020\u00070\u0006\u00a2\u0006\u0002\u0010\u0008\u00a8\u0006\u0009"}, d2={"bubbleSort", "", "arr", "main", "", "args", "", "", "([Ljava/lang/String;)V", "BubbleSortJava"})
  // compiled from: BubbleSortKotlin.kt
}


// ================META-INF/BubbleSortJava.kotlin_module =================
                 

 BubbleSortKotlinKt" * 

